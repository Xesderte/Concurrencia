
class MonitorHoare {
  sem m_mutex = 1;
  sem m_urgentq = 0;
  int m_n_urgentq = 0;
  String m_name;
  public MonitorHoare(String n) {
    this.m_name = n;
  }
  private void m_next() {
      if (m_n_urgentq > 0) {
        m_n_urgentq--;
        V(m_urgentq);
      }
      else {
        V(m_mutex);
      }
  }

private static final int N=5;
private int []buffer = new int[N];
private int front;
private int rear;
private int cantLector;
private int cantEscritor;
private int escritoresEsperando;
private m_condvar puedoEscribir = new m_condvar("puedoEscribir");
private m_condvar puedoLeer = new m_condvar("puedoLeer");

public void escribir (int data){
        op void m_return_from_wait();
        P(m_mutex);


    escritoresEsperando++;
  
    while (cantLector >0||cantEscritor >0){

      {m_condvar m_cv = (puedoEscribir );
          send m_cv.m_wait(m_return_from_wait,0);
          send m_cv.m_wait_ranks(0);
          m_next();
          P(m_return_from_wait);
        }

    }
    
    escritoresEsperando--;
    cantEscritor++;
    System.out.println(data +" escribe");

    buffer[rear]=data;
    rear=(rear+1)%N;
    cantEscritor--;

    if(escritoresEsperando >0){

      { if ((puedoEscribir ).m_signal()) {
          P(m_mutex);
        }
      }

    }else{
      { if ((puedoLeer ).m_signal()) {
          P(m_mutex);
        }
      }
      m_next();
    }

    public void leer (){
        op void m_return_from_wait();
        P(m_mutex);

      while(cantEscritor >0||escritoresEsperando >0){
        // MonitorHoare.m, line 36:             _wait(puedoLeer);
        {  m_condvar m_cv = (puedoLeer );
          send m_cv.m_wait(m_return_from_wait,0);
          send m_cv.m_wait_ranks(0);
          m_next();
          P(m_return_from_wait);
        }
      }

      cantLector++;
      int result=buffer[front];
      System.out.println(" lee : "+result);
      front=(front +1)%N ;
      cantLector--;

      if (cantLector == 0){
        { if ((puedoEscribir ).m_signal()) {
          P(m_mutex);
          }}
        m_next();
      }

    }

}
